/**
*
* 	<samut_exes.acs> 
* 	Execution Module!
*	Here you can store all action handlers that you want!
* 	Just try to DO NOT remove the core-ish ones.
*	Like the ASK, YES, NO, OKAY, OPEN, CLOSE & GTCAT Executions. 
*
**/

//Thank you TDDR!
function void SamuTerm_ServerCheck (int key)
{
	SetInventory("SamuTInv_ActionKey", key);
}

function bool SamuTerm_ClientCheck (int key)
{
	/*
    if(ThingCount(T_NONE, tid) == FALSE)
        return FALSE;
        
    SetActorState(tid, "Null", TRUE);
    return TRUE;
	*/
	return CheckInventory("SamuTInv_ActionKey") >= key;
}

function void SamuTerm_CallOpExecute (int cmd, int arg1, int arg2, int arg3){
	// Depends on what you wanna do.
	// Wanna give items, open doors? Use a negative value.
	// Wanna change the components?  Use a positive value.
	int args = PackBytes(arg1, arg2, arg3, 0);
	if(sgn(cmd) == 1) SamuTerm_ClientExecute(cmd, args);
	else if (sgn(cmd) == -1){
		//Net Packets are Unreliable huh?
		//NamedRequestScriptPuke("SamuTerm_ServerExecute", cmd , arg1, arg2, arg3);
		ACS_NamedExecute("SamuTerm_RequestServExe", 0, cmd, args);
	}
	else return;
}

function void SamuTerm_ClientExecute (int cmd, int args){
	//This next action is for the terminal variable changes.
	int arg1 = UnpackByte1(args);
	int arg2 = UnpackByte2(args);
	int arg3 = UnpackByte3(args);
	SamuTerm_Execute(cmd, arg1, arg2, arg3);
}

script "SamuTerm_RequestServExe" (int cmd, int args){
	int key = CheckInventory("SamuTInv_ActionKey") + 1;
	GiveInventory("SamuTInv_LockInput", 1);
	while(!SamuTerm_ClientCheck(key)) {
		NamedRequestScriptPuke("SamuTerm_ServerExecute", cmd , args, key);
		delay(5);
	}
	TakeInventory("SamuTInv_LockInput", 1);
    
}
Script "SamuTerm_ServerExecute" (int cmd, int args, int key) NET{
	//This next action is for the general gameplay changes..
	if(SamuTerm_ClientCheck(key)) {terminate;}
	
	//[TDDR] Keep this checked to evade a packet loss from the client!
	int arg1 = UnpackByte1(args);
	int arg2 = UnpackByte2(args);
	int arg3 = UnpackByte3(args);
	
	SamuTerm_Execute(cmd, arg1, arg2, arg3);
	SamuTerm_ServerCheck(key);
}


#include "stexec_handler.acs"
#include "stexec_funs.acs"
