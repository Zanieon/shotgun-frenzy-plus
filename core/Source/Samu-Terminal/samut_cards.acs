/**
*
* 	<samut_cards.acs> 
* 	Cards module!
*	You'd wish to place the components in a card layout?
* 	This can generate the necesary layout for your need!
*
**/

function int Card_Generate(void){
	int id = -1, top = cardproptop;
	if(top < STLAYOUT_SAVES){
		
		cardpropsave[top][STCARD_PROP_X] 	= tmp[STCARD_PROP_X];
		cardpropsave[top][STCARD_PROP_Y] 	= tmp[STCARD_PROP_Y];
		cardpropsave[top][STCARD_PROP_STEP] = tmp[STCARD_PROP_STEP];
		cardpropsave[top][STCARD_PROP_ORXY] = tmp[STCARD_PROP_ORXY];
		cardpropsave[top][STCARD_PROP_CELLS] = tmp[STCARD_PROP_CELLS];
		
		//int c = 0;
		bool yorient = cardpropsave[top][STCARD_PROP_ORXY];
		
		for(int i = 0; i < cardpropsave[top][STCARD_PROP_CELLS]; i++){
			if(yorient){
				cardpos[top][i][STCARD_PROP_X] = cardpropsave[top][STCARD_PROP_X];
				cardpos[top][i][STCARD_PROP_Y] = 
				  cardpropsave[top][STCARD_PROP_Y] + cardpropsave[top][STCARD_PROP_STEP] * i;
			}else{
				cardpos[top][i][STCARD_PROP_X] = 
				  cardpropsave[top][STCARD_PROP_X] + cardpropsave[top][STCARD_PROP_STEP] * i;
				cardpos[top][i][STCARD_PROP_Y] = cardpropsave[top][STCARD_PROP_Y];
			}
		}
		id = top;
		cardproptop++;
	}else log(s:"Card save failed, too much cards!");
	
	
	return id;
}

function void Card_ClearAll(void){
	for(int i = 0; i < cardproptop; i++){
		Card_Clear(i);
	}
	cardproptop = 0;
}

function void Card_Clear(int cardid){
	for(int i = 0; i < STCARD_PROPS; i++){
		cardpropsave[cardid][i] = 0;
	}
	for(int j = 0; j < 100; j++){
		cardpos[cardid][j][STCARD_PROP_X] = 0;
		cardpos[cardid][j][STCARD_PROP_Y] = 0;
	}
}

function int Card_GetX(int card, int cell){
	int c = cell-1;
	//log(s:"x ", d:c, s:" / ", d:cardpropsave[card][STCARD_PROP_CELLS]-1);
	if(c < 0 || c > cardpropsave[card][STCARD_PROP_CELLS]) return -1;
	return cardpos[card][c][STCARD_PROP_X];
}

function int Card_GetY(int card, int cell){
	int c = cell-1;
	//log(s:"y ",d:c, s:" / ", d:cardpropsave[card][STCARD_PROP_CELLS]-1);
	if(c < 0 || c > cardpropsave[card][STCARD_PROP_CELLS]) return -1;
	return cardpos[card][c][STCARD_PROP_Y];
}

function void Card_SetPosition(int x, int y){
	tmp[STCARD_PROP_X] = x;
	tmp[STCARD_PROP_Y] = y;
}

function void Card_SetCells(int cells){
	tmp[STCARD_PROP_CELLS] = cells;
}

function void Card_SetStep(int step){
	tmp[STCARD_PROP_STEP] = step;
}

function void Card_SetVerticalOri(bool yorient){
	tmp[STCARD_PROP_ORXY] = yorient;
}